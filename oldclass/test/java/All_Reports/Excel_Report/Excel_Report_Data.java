package All_Reports.Excel_Report;


import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import Config.*;


public class Excel_Report_Data
{
  private static Excel_Report_Data data_instance;
  Map<String, Object[]> data= new TreeMap<String, Object[]>();
  int count;
  ///Date date = new Date();
  //Get the current date
  SimpleDateFormat formatter = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss z");
  public Excel_Report_Data()
  {
    count=1;
    //Columns in your report


   // data.put(String.valueOf(count), new Object[] { "Utterance ", "Expected Intent", "Actual Intent",
       // "Dialog ID", "Execution Status", "Execution Date", "Comment"});
  }
  //Return number of rows to be added to the report
  public  int getCount()
  {
    return count;
  }
  //Sigleton to return the current instance of a class or if there's no instance to create new one
  public static Excel_Report_Data getInstance()
  {
    if(data_instance==null)
    {
      data_instance=new Excel_Report_Data();
    }
    return data_instance;
  }
  //Return the colomns and rows to be generated by the report
  public Map<String, Object[]> get_Data()
  {
    return data;
  }

  //Call this method to add new record
  public void set_Data(String utteranceP,String ExpectedIntentP,String ActualIntentP,String ExpectedNumberP,String ActualNumberP,String DialogIdP,String ExecutionStatusP,String CommentsP,String destinationGroup, String segment, String ucn)
  //public void set_Data(String utteranceP,String ExpectedIntentP,String ActualIntentP,String DialogIdP,String ExecutionStatusP,String CommentsP)
  {
    if(count==1)
      data.put(String.valueOf(count), new Object[] { "Utterance ","UCN","Segment", "Expected Intent", "Actual Intent", "Expected Number", "Actual Number",
          "Dialog ID","Destination Group", "Execution Status", "Execution Date", "Comment"});
    count++;
   // SimpleDateFormat formatter = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss z");
    Date date = new Date();
    Log.info("Utterance *********************************  Expected Intent********** Actual Intent********** Expected Number ********** Actual Number ********** Dialog ID ********** Execution Status ********** Execution Date  **********  Comment");
    Log.info(utteranceP+ " " + ExpectedIntentP+"  "+ ActualIntentP+"  "+ ExpectedNumberP+"  "+ ActualNumberP+"  "+ DialogIdP+"  "+  ExecutionStatusP+"  "+ formatter.format(date)+"  "+ CommentsP);
    data.put(String.valueOf(count),new Object[] {utteranceP,ucn,segment,ExpectedIntentP,ActualIntentP,ExpectedNumberP,ActualNumberP,DialogIdP,destinationGroup,ExecutionStatusP,formatter.format(date),CommentsP});
  }

 public void set_Data_exception(String utteranceP,String ExpectedIntentP,String ActualIntentP,String ExpectedNumberP,String ActualNumberP,  String DialogIdP,String ExecutionStatusP,String CommentsP,String segment)
  {
    if(count==1)
      data.put(String.valueOf(count), new Object[] { "Utterance ","Segment", "Expected Intent", "Actual Intent", "Expected Number", "Actual Number",
          "Dialog ID", "Execution Status", "Execution Date", "Comment"});
    count++;
    // SimpleDateFormat formatter = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss z");
    Date date = new Date();
    Log.info("Utterance *********************************Segment *************  Expected Intent********** Actual Intent********** Expected Number ********** Actual Number ********** Dialog ID ********** Execution Status ********** Execution Date  **********  Comment");
    Log.info(utteranceP+ " "+segment + ExpectedIntentP+"  "+ ActualIntentP+"  "+ ExpectedNumberP+"  "+ ActualNumberP+"  "+ DialogIdP+"  "+  ExecutionStatusP+"  "+ formatter.format(date)+"  "+ CommentsP);
    System.out.println(utteranceP+"  " +segment +" " + ExpectedIntentP+"  "+ ActualIntentP+"  "+ ExpectedNumberP+"  "+ ActualNumberP+"  "+ DialogIdP+"  "+  ExecutionStatusP+"  "+ formatter.format(date)+"  "+ CommentsP);
    data.put(String.valueOf(count),new Object[] {utteranceP,segment, ExpectedIntentP,ActualIntentP,ExpectedNumberP,ActualNumberP,DialogIdP,ExecutionStatusP,formatter.format(date),CommentsP});
  }
  public void set_Data_Smart_Routing(String IntentP,String ExpectedNumberP,String ActualNumberP,String ExecutionStatusP,String CommentsP,String destinationGroup, String segment, String ucn)
  //public void set_Data(String utteranceP,String ExpectedIntentP,String ActualIntentP,String DialogIdP,String ExecutionStatusP,String CommentsP)
  {
    if(count==1)
      data.put(String.valueOf(count), new Object[] { "UCN","Segment", "Intent", "Expected Number", "Actual Number","Destination Group", "Execution Status", "Execution Date", "Comment"});
    count++;
    // SimpleDateFormat formatter = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss z");
    Date date = new Date();
    Log.info("  Intent**********  Expected Number ********** Actual Number **********  Execution Status ********** Execution Date  **********  Comment");
    Log.info(  IntentP+"  "+ "  "+ ExpectedNumberP+"  "+ ActualNumberP+"  "+   ExecutionStatusP+"  "+ formatter.format(date)+"  "+ CommentsP);
    data.put(String.valueOf(count),new Object[] {ucn,segment,IntentP,ExpectedNumberP,ActualNumberP,destinationGroup,ExecutionStatusP,formatter.format(date),CommentsP});
  }
}